- name: create dashboard
  shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml

- name: copy yaml for service account
  copy:
    src: create_dashboard_sa.yaml
    dest: /tmp/create_dashboard_sa.yaml
    mode: 0666

- name: create dashboard
  shell: >-
    kubectl apply -f /tmp/create_dashboard_sa.yaml
#  k8s:
#    state: present
#    src: /tmp/create_dashboard_sa.yaml

#  Dashboard should be available at:
#    http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
#  requires:
#    kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
#    kubectl proxy  (on master node)
#    ssh -g -L 8001:localhost:8001 -i secrets/ez-kube-private-key.pem -f -N ubuntu@<master node ip>  (on client)

- name: remove sa yaml
  file:
    path: /tmp/create_dashboard_sa.yaml
    state: absent

- name: display token
  shell: kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
  register: token

- name: print token
  debug:
    msg: "{{ token }}"

- name: create storage class file
  template:
    src: storageclass.yaml.j2
    dest: /tmp/storageclass.yaml
    mode: 0644

- name: create storage classes
  shell: >-
    kubectl apply -f /tmp/storageclass.yaml

- name: create secret for ebs csi
  template:
    src: ebs-secret.yaml.j2
    dest: /tmp/ebs-secret.yaml
    mode: 0644
  vars:
    csi_access_key: "{{ access_id }}"
    csi_secret_key: "{{ secret_key }}"

- name: create ebs secret in kubernetes
  shell: >-
    kubectl apply -f /tmp/ebs-secret.yaml

- name: copy efs storage class
  copy:
    src: efs-storage-class.yaml
    dest: /tmp/efs-storage-class.yaml
    mode: 0644

- name: create efs storage class
  shell: >-
    kubectl apply -f /tmp/efs-storage-class.yaml

- name: get helm script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /tmp/helm.sh
    mode: 0755

- name: run helm install
  shell: /tmp/helm.sh

- name: add stable repo
  shell: helm repo add stable https://charts.helm.sh/stable

- name: add k8s-sigs ebs repo
  shell: helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver/

- name: add k8s-sigs efs repo
  shell: helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/

- name: update repos
  shell: helm repo update

- name: install csi aws ebs driver
  shell: >-
    helm install aws-ebs-csi-driver
    --set enableVolumeScheduling=true
    --set enableVolumeResizing=true
    --set enableVolumeSnapshot=true
    aws-ebs-csi-driver/aws-ebs-csi-driver
##    https://github.com/kubernetes-sigs/aws-ebs-csi-driver/releases/download/v0.8.0/helm-chart.tgz

- name: install csi aws efs driver
  shell: >-
    helm install aws-efs-csi-driver
    aws-efs-csi-driver/aws-efs-csi-driver

#kubectl apply -k "github.com/kubernetes-sigs/aws-efs-csi-driver/deploy/kubernetes/overlays/stable/ecr/?ref=release-1.0"

- name: copy ingress controller yaml
  copy:
    src: ingress-controller.yaml
    dest: /home/ubuntu/ingress-controller.yaml
    owner: ubuntu
    group: ubuntu
    mode: 0644

- name: apply ingress controller
  shell: >-
    kubectl apply -f /home/ubuntu/ingress-controller.yaml

- name: apply metrics service
  shell: >-
    kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml

# Apply csi driver for aws:
#  kubectl apply -k "github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/?ref=master"

- name: copy cloud controller yaml
  copy:
    src: cloud-controller-manager.yaml
    dest: /home/ubuntu/cloud-controller-manager.yaml
    owner: ubuntu
    group: ubuntu
    mode: 0644

- name: copy aws cloud controller yaml
  copy:
    src: aws-cloud-controller-manager.yaml
    dest: /home/ubuntu/aws-cloud-controller-manager.yaml
    owner: ubuntu
    group: ubuntu
    mode: 0644

- name: copy external service for dashboard
  copy:
    src: dashboard-service.yaml
    dest: /home/ubuntu/dashboard-service.yaml
    owner: ubuntu
    group: ubuntu
    mode: 0644

- name: apply external service dashboard
  shell: kubectl apply -f /home/ubuntu/dashboard-service.yaml
# retrieve the port by running kubectl get services -n kubernetes-dashboard
# access via https://kubernetes.podspace.net:<portno>/
# the token is output

- name: apply cloud controller
  shell: kubectl apply -f /home/ubuntu/aws-cloud-controller-manager.yaml
