apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
...
#---
#apiVersion: storage.k8s.io/v1
#kind: StorageClass
#metadata:
#  name: cloud
#provisioner: kubernetes.io/aws-ebs
#parameters:
#  type: gp2
#  fstype: ext4
#reclaimPolicy: Retain
#mountOptions:
#  - debug
#...
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
...
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: task-pv-claim
#spec:
#  storageClassName: cloud
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi

#kind: Pod
#apiVersion: v1
#metadata:
#  name: task-pv-pod
#spec:
#  volumes:
#    - name: task-pv-storage
#      persistentVolumeClaim:
#        claimName: task-pv-claim
#  containers:
#    - name: task-pv-container
#      image: nginx
#      ports:
#        - containerPort: 80
#          name: "http-server"
#      volumeMounts:
#        - mountPath: "/usr/share/nginx/html"
#          name: task-pv-storage

###===== EBS CSI ===
#kind: StorageClass
#apiVersion: storage.k8s.io/v1
#metadata:
#  name: ebs-sc
#provisioner: ebs.csi.aws.com
#volumeBindingMode: WaitForFirstConsumer
####
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: ebs-claim
#spec:
#  accessModes:
#    - ReadWriteOnce
#  storageClassName: ebs-sc
#  resources:
#    requests:
#      storage: 4Gi
###
#apiVersion: v1
#kind: Pod
#metadata:
#  name: app
#spec:
#  containers:
#  - name: app
#    image: centos
#    command: ["/bin/sh"]
#    args: ["-c", "while true; do echo $(date -u) >> /data/out.txt; sleep 5; done"]
#    volumeMounts:
#    - name: persistent-storage
#      mountPath: /data
#  volumes:
#  - name: persistent-storage
#    persistentVolumeClaim:
#      claimName: ebs-claim