---
- name: update os
  apt:
    update_cache: yes
    upgrade: yes

- name: install docker
  become: yes
  apt:
    name: docker.io
    state: present

- name: enable and start docker
  service:
    name: docker
    enabled: yes
    state: started

#- name: create aws directory
#  file:
#    path: /home/ubuntu/.aws
#    state: directory
#    owner: ubuntu
#    group: ubuntu
#    mode: 0755
#
#- name: copy credentials file
#  copy:
#    src: ../secrets/aws.credentials
#    dest: /home/ubuntu/.aws/credentials
#    owner: ubuntu
#    group: ubuntu
#    mode: 0440

- name: set ip bridge
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"

- name: ensure hostname set
  hostname: name={{ inventory_hostname }}
  when: inventory_hostname is not match('(\d{1,3}\.){3}\d{1,3}')

- name: ensure hostname is in /etc/hosts
  lineinfile:
    dest=/etc/hosts
    regexp="^{{ ansible_default_ipv4.address }}.+$"
    line="{{ ansible_default_ipv4.address }} {{ inventory_hostname }} {{ ansible_hostname }}"

- name: update resolve domain
  ini_file:
    path: /etc/systemd/resolved.conf
    section: Resolve
    option: Domains
    value: internal.podspace.net
    backup: yes
  notify:
    - restart resolved

# Based on the following:
#   https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
#
- name: update apt with kubernetes repo
  shell: |
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    cat <<EOF | tee /etc/apt/sources.list.d/kubernetes.list
    deb https://apt.kubernetes.io/ kubernetes-xenial main
    EOF

- name: refresh apt
  apt:
    update_cache: yes

- name: install kubernetes components
  apt:
    name: ["kubeadm", "kubelet", "kubectl", "python3-pip"]
    state: present

- name: install pip docker
  pip:
    name: docker
    state: present
