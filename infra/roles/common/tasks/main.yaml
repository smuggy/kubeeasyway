---
- name: update os
  apt:
    update_cache: yes
    upgrade: "yes"

- name: install apt secure packages
  apt:
    name: ["apt-transport-https", "ca-certificates", "curl", "software-properties-common", "gnupg"]
    state: present

#- name: create aws directory
#  file:
#    path: /home/ubuntu/.aws
#    state: directory
#    owner: ubuntu
#    group: ubuntu
#    mode: 0755
#
#- name: copy credentials file
#  copy:
#    src: ../secrets/aws.credentials
#    dest: /home/ubuntu/.aws/credentials
#    owner: ubuntu
#    group: ubuntu
#    mode: 0440

- name: modprobe overlay
  modprobe:
    name: overlay

- name: modprobe br_netfilter
  modprobe:
    name: br_netfilter

- name: set ip bridge
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"

- name: set ip4 forward
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"

- name: set ip6 bridge
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes

- name: add cri first key
  apt_key:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key
    state: present

- name: add cri second key
  apt_key:
    url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.20/xUbuntu_20.04/Release.key
    state: present

- name: add cri first repo
  apt_repository:
    repo: deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /
    mode: 0644
    state: present

- name: add cri second repo
  apt_repository:
    repo: deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.20/xUbuntu_20.04/ /
    state: present
    mode: 0644
    update_cache: yes

- name: install cri
  apt:
    name: ["cri-o","cri-o-runc"]
    state: present

- name: start cri
  systemd:
    name: crio
    daemon_reload: yes
    state: restarted

- name: ensure hostname set
  hostname:
    name: "{{ inventory_hostname }}"
#    name: "{{ private_dns }}"

- name: ensure hostname is in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: "^{{ ansible_default_ipv4.address }}.+$"
    line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }} {{ ansible_hostname }}"

- name: update resolve domain
  ini_file:
    path: /etc/systemd/resolved.conf
    section: Resolve
    option: Domains
    value: podspace.cloud
    backup: yes
  notify:
    - restart resolved

# Based on the following:
#   https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
#

- name: add kubernetes key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: update apt with kubernetes repo
  apt_repository:
    repo: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    mode: 0644
    update_cache: yes

#https://grigorkh.medium.com/install-kubernetes-on-ubuntu-1ac2ef522a36
- name: install kubernetes components
  apt:
    name: ["kubeadm", "kubelet", "kubectl", "kubernetes-cni"]
    state: present

- name: copy registries.conf file
  copy:
    src: registries.conf
    dest: /etc/containers/registries.conf
    mode: 0644

# was 10.244.0.0/16
- name: update cni file for cri
  lineinfile:
    path: /etc/cni/net.d/100-crio-bridge.conf
    regexp: '.*subnet": "10.*'
    line: '            [{ "subnet": "10.85.0.0/16" }],'
  notify:
    - restart cri
